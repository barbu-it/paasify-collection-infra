version: '3.4'

networks:
  db:

services:
  netbox: &netbox
    image: netboxcommunity/netbox:${VERSION-v3.4-2.4.0}
    depends_on:
    - postgres
    - redis
    - redis-cache
    env_file: $app_dir_template/env/netbox.env
    networks:
      db:
    user: 'unit:root'
    healthcheck:
      start_period: 360s  # initial script installation time, should be live patched by paasify at install time
      timeout: 3s
      interval: 15s
      test: "curl -f http://localhost:8080/api/ || exit 1"
    volumes:
    # This need to be copied, not cloud ready :(
    #- $app_dir_template/configuration:/etc/netbox/config:z,ro
    - $app_dir_conf:/etc/netbox/config:z,ro
    - $app_dir_template/scripts:/etc/netbox/scripts:z,ro

    - $app_conf/reports:/etc/netbox/reports:z,ro
    - $app_dir_media:/opt/netbox/netbox/media:z
  netbox-worker:
    <<: *netbox
    depends_on:
      netbox:
        condition: service_healthy
    networks:
      db:
    command:
    - /opt/netbox/venv/bin/python
    - /opt/netbox/netbox/manage.py
    - rqworker
    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: "ps -aux | grep -v grep | grep -q rqworker || exit 1"
  netbox-housekeeping:
    <<: *netbox
    depends_on:
      netbox:
        condition: service_healthy
    networks:
      db:
    command:
    - /opt/netbox/housekeeping.sh
    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: "ps -aux | grep -v grep | grep -q housekeeping || exit 1"

  # postgres
  postgres:
    image: postgres:15-alpine
    env_file: $app_dir_template/env/postgres.env
    networks:
      db:
    volumes:
    - $app_dir_root/postgres_data:/var/lib/postgresql/data

  # redis
  redis:
    image: redis:7-alpine
    command:
    - sh
    - -c # this is to evaluate the $REDIS_PASSWORD from the env
    - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: $app_dir_template/env/redis.env
    networks:
      db:
    volumes:
    - $app_dir_root/redis_data:/data
  redis-cache:
    image: redis:7-alpine
    command:
    - sh
    - -c # this is to evaluate the $REDIS_PASSWORD from the env
    - redis-server --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: $app_dir_template/env/redis-cache.env
    networks:
      db:
    volumes:
    - $app_dir_root/redis_cache:/data

      #volumes:
      #  netbox-media-files:
      #    driver: local
      #  netbox-postgres-data:
      #    driver: local
      #  netbox-redis-data:
      #    driver: local
      #  netbox-redis-cache-data:
      #    driver: local
